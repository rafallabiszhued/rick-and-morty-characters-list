{"version":3,"file":"static/js/281.a481a93a.chunk.js","mappings":"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","sources":["components/NotFoundPage/NotFoundPage.tsx","hooks/useDispatchGlobalContext.tsx","common/Inputs/InputSearch.tsx","common/Navigation/Hamburger.tsx","hooks/useOnClickOutside.ts","common/Navigation/Navigation.tsx","layouts/MainLayout.tsx","utils/helpers.ts"],"sourcesContent":["import MainLayout from 'layouts/MainLayout';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport routes from 'routes';\n\ninterface NotFoundPageProps {}\n\nconst NotFoundPage: React.FC<NotFoundPageProps> = () => {\n  return (\n    <MainLayout>\n      <h2>Nothing to see here!</h2>\n      <p>\n        <Link to={routes.home}>Go to the home page</Link>\n      </p>\n    </MainLayout>\n  );\n};\n\nexport default NotFoundPage;\n","import { ActionTypes, useContextDispatch, useContextState } from 'contexts/GlobalContext';\n\nconst useDispatchGlobalContext = () => {\n  const { stateContext } = useContextState();\n  const dispatch = useContextDispatch();\n\n  const dispatchSearch = (value: string) => {\n    dispatch({\n      type: ActionTypes.STATE,\n      payload: { ...stateContext, search: value },\n    });\n  };\n\n  const dispatchCharacterStatus = (value: string) => {\n    dispatch({\n      type: ActionTypes.STATE,\n      payload: { ...stateContext, characterStatus: value },\n    });\n  };\n\n  return {\n    dispatchSearch,\n    dispatchCharacterStatus,\n  };\n};\n\nexport default useDispatchGlobalContext;\n","import React from 'react';\nimport { useContextState } from 'contexts/GlobalContext';\nimport useDispatchGlobalContext from 'hooks/useDispatchGlobalContext';\nimport { DebounceInput } from 'react-debounce-input';\nimport { ScrollToTop } from 'utils/helpers';\n\ninterface InputSearchProps {}\n\nconst InputSearch: React.FC<InputSearchProps> = props => {\n  const { stateContext } = useContextState();\n  const { dispatchSearch } = useDispatchGlobalContext();\n  const handleChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    const isSearch = !!value;\n    if (!isSearch) {\n      ScrollToTop();\n    }\n    dispatchSearch(value);\n  };\n\n  return (\n    <div className=\"input-group relative flex flex-wrap items-stretch w-full\">\n      <div className=\"border rounded overflow-hidden flex\">\n        <DebounceInput\n          value={stateContext.search}\n          type=\"search\"\n          className=\"px-4 py-2\"\n          placeholder=\"Search...\"\n          onChange={handleChange}\n          debounceTimeout={500}\n        />\n        <button className=\"flex items-center justify-center px-4 border-l\">\n          <svg\n            className=\"h-4 w-4 text-grey-dark\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default InputSearch;\n","import React from 'react';\n\ninterface HamburgerProps {\n  toggleShow: () => void;\n}\n\nconst Hamburger: React.FC<HamburgerProps> = ({ toggleShow }) => {\n  return (\n    <button\n      className=\"\n  navbar-toggler\n  text-gray-500\n  border-0\n  hover:shadow-none hover:no-underline\n  py-2\n  px-2.5\n  bg-transparent\n  focus:outline-none focus:ring-0 focus:shadow-none focus:no-underline\n\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n      onClick={toggleShow}\n    >\n      <svg\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        data-prefix=\"fas\"\n        data-icon=\"bars\"\n        className=\"w-6\"\n        role=\"img\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 448 512\"\n      >\n        <path\n          fill=\"currentColor\"\n          d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n        ></path>\n      </svg>\n    </button>\n  );\n};\n\nexport default Hamburger;\n","import { useEffect, RefObject } from 'react';\r\ntype Event = MouseEvent | TouchEvent;\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(ref: RefObject<T>, handler: (event: Event) => void) {\r\n  useEffect(() => {\r\n    const listener = (event: Event) => {\r\n      const el = ref?.current;\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains((event?.target as Node) || null)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener(`click`, listener);\r\n    return () => {\r\n      document.removeEventListener(`click`, listener);\r\n    };\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler]);\r\n}\r\nexport default useOnClickOutside;\r\n","import InputSearch from 'common/Inputs/InputSearch';\nimport Hamburger from 'common/Navigation/Hamburger';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\nimport React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport routes from 'routes';\nimport styled from 'styled-components/macro';\n\ntype StateProps = {\n  isShow: boolean;\n};\nconst Menu = styled.div<StateProps>`\n  display: ${({ isShow }) => (isShow ? `visible` : `none`)};\n`;\n\nconst MenuList = styled.ul`\n  max-width: 1150px;\n`;\n\ninterface NavigationProps {}\n\nconst Navigation: React.FC<NavigationProps> = (props) => {\n  const [show, setShow] = useState(false);\n  const ref = useRef(null);\n\n  const toggleShow = () => setShow((prev) => !prev);\n\n  //close mobile menu if click outside nav\n  useOnClickOutside(ref, () => toggleShow());\n\n  return (\n    <nav\n      className=\"\n    fixed\n    w-full\n    flex flex-wrap\n    items-center\n    justify-between\n    py-4\n    bg-white\n    text-gray-500\n    hover:text-gray-700\n    focus:text-gray-700\n    navbar navbar-expand-lg navbar-light\n    \"\n      ref={ref}\n    >\n      <div className=\"container-fluid w-full flex flex-wrap items-center justify-between px-6\">\n        <Hamburger toggleShow={toggleShow} />\n        <Menu className=\"collapse navbar-collapse flex-grow items-center\" id=\"navbarSupportedContent\" isShow={show}>\n          <MenuList className=\"navbar-nav flex flex-col pl-0 list-style-none mr-auto w-full justify-between items-center\">\n            <li className=\"nav-item pr-2\">\n              <Link to={routes.home} className=\"nav-link active\" aria-current=\"page\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item px-2\">\n              <InputSearch />\n            </li>\n          </MenuList>\n        </Menu>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import Navigation from 'common/Navigation';\nimport React from 'react';\nimport styled from 'styled-components/macro';\n\nconst Header = styled.header`\n  height: 56px;\n  max-width: 1150px;\n  margin: 0 auto;\n  nav {\n    max-width: 1150px;\n  }\n`;\n\nconst Container = styled.main`\n  min-height: calc(100vh - 56px);\n  background-color: #eff0f5; //TODO background color to global style\n`;\n\ninterface MainLayoutProps {}\n\nconst MainLayout: React.FC<MainLayoutProps> = ({ children }) => {\n  return (\n    <>\n      <Header>\n        <Navigation />\n      </Header>\n      <Container className=\"\">{children}</Container>\n    </>\n  );\n};\n\nexport default MainLayout;\n","export const ScrollToTop = () => window.scrollTo(0, 0);\n\nexport function getKeyNameEnumByValue<T>(enumCollection: T, value: string) {\n  return Object.entries(enumCollection).find(([key, val]) => val === value)?.[0];\n}\n\nexport const capitalizeFirstLetter = (value: string) => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n"],"names":["MainLayout","to","routes","stateContext","useContextState","dispatch","useContextDispatch","dispatchSearch","value","type","ActionTypes","payload","search","dispatchCharacterStatus","characterStatus","props","useDispatchGlobalContext","handleChange","e","target","ScrollToTop","className","DebounceInput","placeholder","onChange","debounceTimeout","fill","xmlns","viewBox","d","toggleShow","onClick","focusable","role","ref","handler","useEffect","listener","event","el","current","contains","document","addEventListener","removeEventListener","Menu","styled","isShow","MenuList","useState","show","setShow","useRef","prev","useOnClickOutside","id","Header","Container","children","window","scrollTo","getKeyNameEnumByValue","enumCollection","Object","entries","find","capitalizeFirstLetter","charAt","toUpperCase","slice"],"sourceRoot":""}